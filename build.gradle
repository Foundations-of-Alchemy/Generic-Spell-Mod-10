plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenLocal()
    maven {
        url 'https://storage.googleapis.com/devan-maven/'
        content {
            includeGroup "io.github.astrarre"
        }
    }
}

sourceSets {
    encCls { // encrypted classes source set
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.devtech:OpenEasterEggsLib:1.0.0"
    modImplementation "net.devtech:Datagen:1.0.1"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand("version": project.version)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from(sourceSets.main.allSource) {
        exclude("io/github/foa/gsm10/datagen/**")
    }

}

jar {
    from "LICENSE"
    exclude("io/github/foa/gsm10/datagen/**")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
